from hashlib import sha256 
MAX_NONCE = 10000000 
#This is a function called SHA256 which takes some text and returns a hash Value
#The hash value is given in HEX (64 hex digits) 4 bits for every hex character = 256 
def SHA256(text):
    return sha256(text.encode("ascii")).hexdigest() #this returns a hash value

def mine(block_number, transactions, previous_hash, prefix_zeros):
    prefix_str = '0'*prefix_zeros 
    for nonce in range(MAX_NONCE): 
        text = str(block_number) + transactions + previous_hash + str(nonce) 
        new_hash = SHA256(text) 
        print(new_hash) 
        if new_hash.startswith(prefix_str):
            print(f"Successfully mined bitcoins with nonce value:{nonce}")
            return new_hash
        
    raise BaseException(f"Couldn't find correct has after trying {MAX_NONCE} times")
#PROGRAM STARTS HERE
transactions='''
    MRS M -> Mr Hastings ->20,
    Mr Hastings -> Mrs Benjamin ->45
    '''
difficulty=2 
import time 
start = time.time() 
print("Start mining ...")
print()
print()
new_hash = mine(5,transactions,'0000000xa036944e29568d0cff17edbe038f81208fecf9a66be9a2b8321c6ec7', difficulty)
total_time = str((time.time() - start))
print()
print()
print(f"End mining")
print()
print("Mining took:", {total_time},"seconds")
print("New hash:",(new_hash))
   
