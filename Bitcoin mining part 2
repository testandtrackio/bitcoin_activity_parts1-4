from hashlib import sha256 

#This function takes a string that the user inputs and returns a hash value
def SHA256(text):
    return sha256(text.encode("ascii")).hexdigest() #this returns a hash value


#START OF PROGRAM
print("------Bitcoin Mining Simulation---------")
mystring=input("Enter your transaction details:")
print()
print(".....Mining......")
print()

#Using while True results in an infinite loop.
while True:
    #declare a variable called hashval and call the function above
    hashval = SHA256(mystring)
    print(hashval) #print the returned hash value.
    if hashval.startswith("0000"): #if the hash value starts with 00
        break #break out of the while loop
    mystring=mystring+"!" #for each iteration (loop) keep adding ! each time
    #Adding the ! will give a different hash value for each iteration.

print()
print("Found")


"""
"This is a sequential approach that would take years - change to iteration!

print(SHA256(mystring)) #this hashes the string 'bitcoin' but doesn't return a 0
print(SHA256(mystring+"!")) #here we add a ! to the string which changes the return hash value - still no 0
print(SHA256(mystring+"!!")) #and so on ....
print(SHA256(mystring+"!!!"))

"""






"""
CHALLENGE
Have a look at the following code, understand how it works
and test it.
Your challenge is to "mine" a hash value using the input "bitcoin".
The first person to find a returning hash value that has two
leading 00s wins.
e.g. 00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (should be returned as a hash value)
If you get two 0s at the start of the hash value returned, you have
won!!!!!!!!
"""
